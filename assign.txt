Dice 4 (more input)
ICAgIFRoZSBMb25nZXN0IENvbW1vbiBTdWJzZXF1ZW5jZSAoTENTKSBwcm9ibGVtIGlzIGEgd2VsbCBrbm93biBwcm9ibGVtIGluIENvbXB1dGVyIFNjaWVuY2UuIEV2ZXJ5IGNvbXB1dGVyIHNjaWVuY2Ugc3R1ZGVudHMgaW4gQnl0ZWxhbmQga25vd3MgdGhpcyBwcm9ibGVtLiBKb2hubnkgZG9lcywgdG9vLgoKICAgIFJlY2FsbCB0aGF0IGEgc3Vic2VxdWVuY2Ugb2YgYSBzdHJpbmcgUyBpcyBvYnRhaW5lZCBieSBkZWxldGluZyBzb21lIGNoYXJhY3RlcnMgZnJvbSBTLiBHaXZlbiB0d28gc3RyaW5ncyBTIGFuZCBULCB0aGUgTENTIHByb2JsZW0gaXMgdGhlIGZpbmQgdGhlIGxvbmdlc3Qgc2VxdWVuY2UgdGhhdCBpcyBhIHN1YnNlcXVlbmNlIG9mIGJvdGggUyBhbmQgVC4KCiAgICBKb2hubnkgaGFzIHRoZSBoYWJpdCBvZiBkZXJpdmluZyBoYXJkZXIgcHJvYmxlbXMgZnJvbSBhIGZhbWlsaWFyIHByb2JsZW0uIFRoaXMgdGltZSwgYmFzZWQgb24gdGhlIExDUyBwcm9ibGVtLCBoZSBoYXMgdGhvdWdodCB1cCB0aGUgZm9sbG93aW5nIHByb2JsZW06CgogICAgR2l2ZW4gdHdvIHN0cmluZ3MgUyBhbmQgVCwgaG93IG1hbnkgZGlzdGluY3QgTENTIG9mIFMgYW5kIFQgYXJlIHRoZXJlPwoKICAgIFdyaXRlIGEgcHJvZ3JhbSB0byBoZWxwIEpvaG5ueSBzb2x2ZSB0aGlzIHByb2JsZW0uIFNpbmNlIHRoZSByZXN1bHQgbWF5IGJlIHZlcnkgbGFyZ2UsIHlvdSBvbmx5IG5lZWQgdG8gcHJpbnQgdGhlIHJlbWFpbmRlciBvZiB0aGUgcmVzdWx0IHdoZW4gZGl2aWRpbmcgYnkgMjMxMDIwMDkuCiAgICBJbnB1dAoKICAgIFRoZSBmaXJzdCBsaW5lIGNvbnRhaW5zIHQsIHRoZSBudW1iZXIgb2YgdGVzdCBjYXNlcyAoYWJvdXQgMTApLiBUaGVuIHQgdGVzdCBjYXNlcyBmb2xsb3cuCgogICAgRWFjaCB0ZXN0IGNhc2UgY29uc2lzdHMgb2YgdHdvIGxpbmVzLCB0aGUgZmlyc3QgbGluZSBpcyB0aGUgc3RyaW5nIFMgYW5kIHRoZSBzZWNvbmQgbGluZSBpcyB0aGUgc3RyaW5nIFQuIFlvdSBtYXkgYXNzdW1lIHRoYXQgdGhlIHN0cmluZ3MgY29uc2lzdHMgb2Ygb25seSBsb3dlcmNhc2UgY2hhcmFjdGVycyBhbmQgdGhlIGxlbmd0aCBvZiB0aGUgZWFjaCBzdHJpbmcgaXMgYXQgbW9zdCAxMDAwIGNoYXJhY3RlcnMuCgogICAgU3VjY2Vzc2l2ZSB0ZXN0IGNhc2VzIGF0IGlucHV0IGFyZSBzZXBhcmF0ZWQgYnkgYSBzaW5nbGUgYmxhbmsgbGluZS4KICAgIE91dHB1dAoKICAgIEZvciBlYWNoIHRlc3QgY2FzZSwgcHJpbnQgYSBzaW5nbGUgbGluZSBjb250YWluaW5nIHR3byBudW1iZXJzIHdoaWNoIGFyZSB0aGUgbGVuZ3RoIG9mIHRoZSBMQ1MgYW5kIHRoZSByZW1haW5kZXIgb2YgdGhlIG51bWJlciBvZiBkaXN0aW5jdCBMQ1Mgb2YgUyBhbmQgVCB3aGVuIGRpdmlkaW5nIGJ5IDIzMTAyMDA5LgoKCVNhbXBsZSBJbnB1dDoKCTIKCWFjYmQKCWFjYmQKCgl2bnZuCgl2bgoJU2FtcGxlIE91dHB1dDoKCTQgMQoJMiAxCg==
Ly8gQXV0aG9yOiAgICAgICAgICAgU3llZCBUYW1hbAovLyBDcmVhdGVkOiAgICAgICAgICAwMyBPY3QgMjAyMyAgMDU6MjI6MzcgCgojaW5jbHVkZSA8Yml0cy9zdGRjKysuaD4KdXNpbmcgbmFtZXNwYWNlIHN0ZDsKI2RlZmluZSBpbnQgbG9uZyBsb25nCiNpZmRlZiBPTlBDCiNpbmNsdWRlICJteWRlYnVnLmgiCiNlbHNlCiNkZWZpbmUgZGVidWcoLi4uKSAxCiNlbmRpZgojZGVmaW5lIG1vZCAyMzEwMjAwOQoKdm9pZCBzb2x2ZSgpewogICAgc3RyaW5nIGEsIGI7CiAgICBjaW4+PmE+PmI7CiAgICBpbnQgZHBbYS5zaXplKCkgKyAxXVtiLnNpemUoKSArIDFdOwogICAgbWVtc2V0KGRwLCAwLCBzaXplb2YgZHApOwogICAgaW50IG4gPSBhLnNpemUoKSwgbSA9IGIuc2l6ZSgpOwogICAgZm9yKGludCBpPTE7aTw9bjtpKyspewogICAgICAgIGZvcihpbnQgaj0xO2o8PW07aisrKXsKICAgICAgICAgICAgaWYoYVtpLTFdID09IGJbai0xXSkgZHBbaV1bal0gPSAxICsgZHBbaS0xXVtqLTFdOwogICAgICAgICAgICBlbHNlIGRwW2ldW2pdID0gbWF4KGRwW2ktMV1bal0sIGRwW2ldW2otMV0pOwogICAgICAgIH0KICAgIH0KICAgIGludCBsY3NbbisxXVttKzFdOwogICAgbWVtc2V0KGxjcywgMCwgc2l6ZW9mIGxjcyk7CiAgICBmb3IoaW50IGk9MDtpPD1uO2krKyl7CiAgICAgICAgZm9yKGludCBqPTA7ajw9bTtqKyspewogICAgICAgICAgICBpZihpPT0wIHx8IGo9PTApewogICAgICAgICAgICAgICAgbGNzW2ldW2pdID0gMTsKICAgICAgICAgICAgICAgIGNvbnRpbnVlOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmKGFbaS0xXSA9PSBiW2otMV0pewogICAgICAgICAgICAgICAgbGNzW2ldW2pdID0gbGNzW2ktMV1bai0xXTsKICAgICAgICAgICAgICAgIGNvbnRpbnVlOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmKGRwW2ktMV1bal0gPT0gZHBbaV1bal0pIGxjc1tpXVtqXSA9IChsY3NbaV1bal0gKyBsY3NbaS0xXVtqXSkgJSBtb2Q7CiAgICAgICAgICAgIGlmKGRwW2ldW2otMV0gPT0gZHBbaV1bal0pIGxjc1tpXVtqXSA9IChsY3NbaV1bal0gKyBsY3NbaV1bai0xXSkgJSBtb2Q7CiAgICAgICAgICAgIGlmKGRwW2ldW2pdID09IGRwW2ktMV1bai0xXSkgbGNzW2ldW2pdID0gKGxjc1tpXVtqXSAtIGxjc1tpLTFdW2otMV0gKyBtb2QpICUgbW9kOwogICAgICAgIH0KICAgIH0KICAgIGNvdXQ8PGRwW25dW21dPDwiICI8PGxjc1tuXVttXTw8IlxuIjsKfQoKaW50MzJfdCBtYWluKCl7CiAgICBpb3M6OnN5bmNfd2l0aF9zdGRpbyhmYWxzZSk7CiAgICBjaW4udGllKG51bGxwdHIpOwogICAgaW50IG47CiAgICBjaW4+Pm47CiAgICBmb3IoaW50IGk9MTtpPD1uO2krKykgc29sdmUoKTsKfQo=
nullMgphY2JkCmFjYmQKCnZudm4Kdm4=   
-- 